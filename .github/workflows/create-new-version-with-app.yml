name: Create a new version with app

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      random:
        type: string
        description: random

permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: write

jobs:

  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Truncate sha
        id: truncate
        env:
          VERSION: ${{ inputs.version }}
        run: echo "short_version=${VERSION::8}" >> "$GITHUB_OUTPUT"
      - run: echo "Actor ${{ github.actor }}, triggering actor ${{ github.triggering_actor }} short ${{ steps.truncate.output.short_version }}"

  create-new-version:
    name: Update version
    permissions:
        contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-bump.outputs.version }}
    steps:
      - uses: tibdex/github-app-token@v1
        id: create_token
        with: 
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
    
      - uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0
          fetch-tags: true
          token: ${{ steps.create_token.outputs.token }}

      - name: install
        run: npm install --immutable

      - name: log
        run: |
          git config --global user.name "Mr. Bot"
          git config --global user.email "mr.bot@users.noreply.github.com"
          git config --global url.https://${{ steps.create_token.outputs.token }}@github.com/.insteadOf https://github.com/

          current_date=$(date +"%Y-%m-%d %H:%M:%S")
          echo "The current date is: $current_date"
          echo "$current_date" >> log.txt
          git add . 
          git commit -m "update-log"
          
      - name: version bump
        id: version-bump
        run: |
          npm version ${{ inputs.version }}
          VERSION=$(git describe --tags --abbrev=0)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version: $VERSION" >> $GITHUB_STEP_SUMMARY

      - name: Push changes
        run: git push origin main --tags
      
  package:
    needs: [create-new-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-new-version.outputs.version }}
      - name: Get current commit SHA
        id: get_sha
        run: echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - run: |
          cat log.txt
      - run: |
          echo 'ref: ${{ github.ref }}, github.sha: ${{ github.sha }}, current.sha: ${{ env.commit_sha }}, ${{ needs.create-new-version.outputs.version }}'           
      - run: |
          mkdir dist
          cp log.txt dist
          cp package.json dist
          zip build-${{ needs.create-new-version.outputs.version }}.zip dist -r
          md5sum -b build-${{ needs.create-new-version.outputs.version }}.zip | awk '{ print $1 }' > build-${{ needs.create-new-version.outputs.version }}.zip.md5
          ls -al
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-package
          path: |
            build-${{ needs.create-new-version.outputs.version }}.zip
            build-${{ needs.create-new-version.outputs.version }}.zip.md5
          retention-days: 1

  create-github-release:
    name: Create GitHub Release ${{ needs.create-new-version.outputs.version }}
    needs: [create-new-version, package]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:     
      - uses: tibdex/github-app-token@v1
        id: create_token
        with: 
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-new-version.outputs.version }}
          fetch-depth: 0
          fetch-tags: true
      - name: Get artifact
        uses: actions/download-artifact@v4
        with:
          name: build-package
          path: package
      - name: Get changelog
        run: awk '/^## / {s++} s == 1 {print}' CHANGELOG.md > release_notes.md
      - name: Create Github release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          prerelease: false
          generate_release_notes: false
          files: package/*
          tag_name: ${{ needs.create-new-version.outputs.version }}
          token: ${{ steps.create_token.outputs.token }}
          body_path: release_notes.md
            
  deploy-to-dev:
    needs: [create-new-version,create-github-release]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: deploy to dev
        run: echo Deployed to dev ${{ needs.create-new-version.outputs.version }}

  deploy-to-ops:
    needs: [create-new-version,deploy-to-dev]  
    runs-on: ubuntu-latest
    environment: ops
    steps:
      - name: deploy to ops
        run: echo Deployed to ops ${{ needs.create-new-version.outputs.version }}

  deploy-to-prod:
    needs: [create-new-version,deploy-to-ops]
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: deploy to prod
        run: echo Deployed to prod ${{ needs.create-new-version.outputs.version }}
